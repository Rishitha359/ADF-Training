{
	"name": "DF_Cleaning",
	"properties": {
		"folder": {
			"name": "Web Scraping Data Flows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Product_Sql",
						"type": "DatasetReference"
					},
					"name": "ProductDetails"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_Sql",
						"type": "LinkedServiceReference"
					},
					"name": "CleanedProductDetails"
				}
			],
			"transformations": [
				{
					"name": "ChangingDataTypes"
				},
				{
					"name": "FillingNullValues"
				}
			],
			"scriptLines": [
				"source(output(",
				"          department_code as string,",
				"          category_code as string,",
				"          category_name as string,",
				"          series_code as string,",
				"          series_name as string,",
				"          brand_code as string,",
				"          brand_url_code as string,",
				"          brand_name as string,",
				"          min_standard_days_to_ship as string,",
				"          max_standard_days_to_ship as string,",
				"          direct_cart_type as string,",
				"          price_check_less_flag as string,",
				"          min_standard_unit_price as string,",
				"          max_standard_unit_price as string,",
				"          min_price_per_piece as string,",
				"          max_price_per_piece as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductDetails",
				"ProductDetails cast(output(",
				"          series_code as float,",
				"          min_standard_days_to_ship as integer,",
				"          max_standard_days_to_ship as integer,",
				"          direct_cart_type as integer,",
				"          price_check_less_flag as integer,",
				"          min_standard_unit_price as float,",
				"          max_standard_unit_price as float,",
				"          min_price_per_piece as float,",
				"          max_price_per_piece as float",
				"     ),",
				"     errors: true) ~> ChangingDataTypes",
				"ChangingDataTypes derive(min_standard_unit_price = coalesce(min_standard_unit_price,0.0),",
				"          max_standard_unit_price = coalesce(max_standard_unit_price,0.0),",
				"          min_price_per_piece = coalesce(min_price_per_piece,0.0),",
				"          max_price_per_piece = coalesce(max_price_per_piece,0.0)) ~> FillingNullValues",
				"FillingNullValues sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'prep',",
				"     tableName: 'ProductDetails',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     recreate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> CleanedProductDetails"
			]
		}
	}
}